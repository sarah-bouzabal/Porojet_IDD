[2023-11-24T13:58:51.966+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Projet_IDD.create_table manual__2023-11-24T13:58:50.659141+00:00 [queued]>
[2023-11-24T13:58:51.973+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Projet_IDD.create_table manual__2023-11-24T13:58:50.659141+00:00 [queued]>
[2023-11-24T13:58:51.974+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2023-11-24T13:58:51.987+0000] {taskinstance.py:1382} INFO - Executing <Task(PostgresOperator): create_table> on 2023-11-24 13:58:50.659141+00:00
[2023-11-24T13:58:51.991+0000] {standard_task_runner.py:57} INFO - Started process 1039 to run task
[2023-11-24T13:58:51.994+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'Projet_IDD', 'create_table', 'manual__2023-11-24T13:58:50.659141+00:00', '--job-id', '25', '--raw', '--subdir', 'DAGS_FOLDER/ETL.py', '--cfg-path', '/tmp/tmpod4ef7zy']
[2023-11-24T13:58:51.997+0000] {standard_task_runner.py:85} INFO - Job 25: Subtask create_table
[2023-11-24T13:58:52.037+0000] {task_command.py:416} INFO - Running <TaskInstance: Projet_IDD.create_table manual__2023-11-24T13:58:50.659141+00:00 [running]> on host efa6202eecdb
[2023-11-24T13:58:52.237+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='Projet_IDD' AIRFLOW_CTX_TASK_ID='create_table' AIRFLOW_CTX_EXECUTION_DATE='2023-11-24T13:58:50.659141+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2023-11-24T13:58:50.659141+00:00'
[2023-11-24T13:58:52.239+0000] {sql.py:274} INFO - Executing: drop  table IF EXISTS hospitalisation; 
drop  table IF EXISTS departements; 
drop  table IF EXISTS passage_urgence; 
drop  table IF EXISTS urgences_hosp;


CREATE TABLE IF NOT EXISTS hospitalisation(
    num_dep VARCHAR(10),
    date_pass DATE,
    PRIMARY KEY (num_dep, date_pass)
);

CREATE TABLE IF NOT EXISTS passage_urgence(
    num_dep VARCHAR(10),
    Code_tranches_dage INT,
    mois INT,
    PRIMARY KEY (num_dep, code_tranches_dage)
);

CREATE TABLE IF NOT EXISTS departements (
    num_dep VARCHAR(10),
    dep_name VARCHAR(50),
    region_name VARCHAR(50),
    PRIMARY KEY (num_dep)
);

CREATE TABLE IF NOT EXISTS urgences_hosp (
    dep VARCHAR(10),
    date_de_passage DATE,
    sursaud_cl_age_corona INT,
    nbre_pass_corona INT,
    nbre_pass_tot INT,
    nbre_hospit_corona INT,
    nbre_pass_corona_h INT,
    nbre_pass_corona_f INT,
    nbre_pass_tot_h INT,
    nbre_pass_tot_f INT,
    nbre_hospit_corona_h INT,
    nbre_hospit_corona_f INT,
    FOREIGN KEY (dep) REFERENCES departements(num_dep),
    FOREIGN KEY (dep, date_de_passage) REFERENCES hospitalisation(num_dep, date_pass),
    FOREIGN KEY (dep, sursaud_cl_age_corona) REFERENCES passage_urgence(num_dep, Code_tranches_dage)
);
[2023-11-24T13:58:52.247+0000] {base.py:73} INFO - Using connection ID 'postgres_connexion' for task execution.
[2023-11-24T13:58:52.253+0000] {base.py:73} INFO - Using connection ID 'postgres_connexion' for task execution.
[2023-11-24T13:58:52.265+0000] {sql.py:418} INFO - Running statement: drop  table IF EXISTS hospitalisation; 
drop  table IF EXISTS departements; 
drop  table IF EXISTS passage_urgence; 
drop  table IF EXISTS urgences_hosp;


CREATE TABLE IF NOT EXISTS hospitalisation(
    num_dep VARCHAR(10),
    date_pass DATE,
    PRIMARY KEY (num_dep, date_pass)
);

CREATE TABLE IF NOT EXISTS passage_urgence(
    num_dep VARCHAR(10),
    Code_tranches_dage INT,
    mois INT,
    PRIMARY KEY (num_dep, code_tranches_dage)
);

CREATE TABLE IF NOT EXISTS departements (
    num_dep VARCHAR(10),
    dep_name VARCHAR(50),
    region_name VARCHAR(50),
    PRIMARY KEY (num_dep)
);

CREATE TABLE IF NOT EXISTS urgences_hosp (
    dep VARCHAR(10),
    date_de_passage DATE,
    sursaud_cl_age_corona INT,
    nbre_pass_corona INT,
    nbre_pass_tot INT,
    nbre_hospit_corona INT,
    nbre_pass_corona_h INT,
    nbre_pass_corona_f INT,
    nbre_pass_tot_h INT,
    nbre_pass_tot_f INT,
    nbre_hospit_corona_h INT,
    nbre_hospit_corona_f INT,
    FOREIGN KEY (dep) REFERENCES departements(num_dep),
    FOREIGN KEY (dep, date_de_passage) REFERENCES hospitalisation(num_dep, date_pass),
    FOREIGN KEY (dep, sursaud_cl_age_corona) REFERENCES passage_urgence(num_dep, Code_tranches_dage)
);, parameters: None
[2023-11-24T13:58:52.269+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/operators/sql.py", line 280, in execute
    output = hook.run(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 392, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 423, in _run_command
    cur.execute(sql_statement)
psycopg2.errors.DependentObjectsStillExist: cannot drop table hospitalisation because other objects depend on it
DETAIL:  constraint urgences_hosp_dep_date_de_passage_fkey on table urgences_hosp depends on table hospitalisation
HINT:  Use DROP ... CASCADE to drop the dependent objects too.

[2023-11-24T13:58:52.277+0000] {taskinstance.py:1400} INFO - Marking task as FAILED. dag_id=Projet_IDD, task_id=create_table, execution_date=20231124T135850, start_date=20231124T135851, end_date=20231124T135852
[2023-11-24T13:58:52.287+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 25 for task create_table (cannot drop table hospitalisation because other objects depend on it
DETAIL:  constraint urgences_hosp_dep_date_de_passage_fkey on table urgences_hosp depends on table hospitalisation
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
; 1039)
[2023-11-24T13:58:52.328+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2023-11-24T13:58:52.346+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
