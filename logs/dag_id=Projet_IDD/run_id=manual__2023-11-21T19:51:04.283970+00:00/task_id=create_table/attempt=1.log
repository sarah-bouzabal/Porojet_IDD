[2023-11-21T19:51:05.761+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Projet_IDD.create_table manual__2023-11-21T19:51:04.283970+00:00 [queued]>
[2023-11-21T19:51:05.775+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Projet_IDD.create_table manual__2023-11-21T19:51:04.283970+00:00 [queued]>
[2023-11-21T19:51:05.776+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2023-11-21T19:51:05.798+0000] {taskinstance.py:1382} INFO - Executing <Task(PostgresOperator): create_table> on 2023-11-21 19:51:04.283970+00:00
[2023-11-21T19:51:05.811+0000] {standard_task_runner.py:57} INFO - Started process 2987 to run task
[2023-11-21T19:51:05.823+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'Projet_IDD', 'create_table', 'manual__2023-11-21T19:51:04.283970+00:00', '--job-id', '89', '--raw', '--subdir', 'DAGS_FOLDER/ETL.py', '--cfg-path', '/tmp/tmprv8i2z4v']
[2023-11-21T19:51:05.827+0000] {standard_task_runner.py:85} INFO - Job 89: Subtask create_table
[2023-11-21T19:51:06.066+0000] {task_command.py:416} INFO - Running <TaskInstance: Projet_IDD.create_table manual__2023-11-21T19:51:04.283970+00:00 [running]> on host 726cce66553f
[2023-11-21T19:51:07.518+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='Projet_IDD' AIRFLOW_CTX_TASK_ID='create_table' AIRFLOW_CTX_EXECUTION_DATE='2023-11-21T19:51:04.283970+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2023-11-21T19:51:04.283970+00:00'
[2023-11-21T19:51:07.520+0000] {sql.py:274} INFO - Executing: drop  table IF EXISTS passages_corona; 
drop  table IF EXISTS tranches_dage; 
drop  table IF EXISTS departements; 

CREATE TABLE IF NOT EXISTS passages_corona (
    dep INT,
    date_de_passage DATE,
    sursaud_cl_age_corona INT,
    nbre_pass_corona INT,
    nbre_pass_tot INT,
    nbre_hospit_corona INT,
    nbre_pass_corona_h INT,
    nbre_pass_corona_f INT,
    nbre_pass_tot_h INT,
    nbre_pass_tot_f INT,
    nbre_hospit_corona_h INT,
    nbre_hospit_corona_f INT,
    nbre_acte_corona INT,
    nbre_acte_tot INT,
    nbre_acte_corona_h INT,
    nbre_acte_corona_f INT,
    nbre_acte_tot_h INT,
    nbre_acte_tot_f INT,
    FOREIGN KEY (dep) REFERENCES departements(num_dep),
    FOREIGN KEY (sursaud_cl_age_corona) REFERENCES tranches_dage(Code_tranches_dage)
);

CREATE TABLE IF NOT EXISTS tranches_dage(
      Code_tranches_dage INT,
      Age VARCHAR(50),
      PRIMARY KEY (Code_tranches_dage)
    );

    CREATE TABLE IF NOT EXISTS departements (
    num_dep INT,
    dep_name VARCHAR(50),
    region_name VARCHAR(50),
    PRIMARY KEY (num_dep)
);
[2023-11-21T19:51:07.531+0000] {base.py:73} INFO - Using connection ID 'postgres_connexion' for task execution.
[2023-11-21T19:51:07.570+0000] {base.py:73} INFO - Using connection ID 'postgres_connexion' for task execution.
[2023-11-21T19:51:07.586+0000] {sql.py:418} INFO - Running statement: drop  table IF EXISTS passages_corona; 
drop  table IF EXISTS tranches_dage; 
drop  table IF EXISTS departements; 

CREATE TABLE IF NOT EXISTS passages_corona (
    dep INT,
    date_de_passage DATE,
    sursaud_cl_age_corona INT,
    nbre_pass_corona INT,
    nbre_pass_tot INT,
    nbre_hospit_corona INT,
    nbre_pass_corona_h INT,
    nbre_pass_corona_f INT,
    nbre_pass_tot_h INT,
    nbre_pass_tot_f INT,
    nbre_hospit_corona_h INT,
    nbre_hospit_corona_f INT,
    nbre_acte_corona INT,
    nbre_acte_tot INT,
    nbre_acte_corona_h INT,
    nbre_acte_corona_f INT,
    nbre_acte_tot_h INT,
    nbre_acte_tot_f INT,
    FOREIGN KEY (dep) REFERENCES departements(num_dep),
    FOREIGN KEY (sursaud_cl_age_corona) REFERENCES tranches_dage(Code_tranches_dage)
);

CREATE TABLE IF NOT EXISTS tranches_dage(
      Code_tranches_dage INT,
      Age VARCHAR(50),
      PRIMARY KEY (Code_tranches_dage)
    );

    CREATE TABLE IF NOT EXISTS departements (
    num_dep INT,
    dep_name VARCHAR(50),
    region_name VARCHAR(50),
    PRIMARY KEY (num_dep)
);, parameters: None
[2023-11-21T19:51:07.595+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/operators/sql.py", line 280, in execute
    output = hook.run(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 392, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 423, in _run_command
    cur.execute(sql_statement)
psycopg2.errors.UndefinedTable: relation "departements" does not exist

[2023-11-21T19:51:07.622+0000] {taskinstance.py:1400} INFO - Marking task as FAILED. dag_id=Projet_IDD, task_id=create_table, execution_date=20231121T195104, start_date=20231121T195105, end_date=20231121T195107
[2023-11-21T19:51:07.640+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 89 for task create_table (relation "departements" does not exist
; 2987)
[2023-11-21T19:51:07.697+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2023-11-21T19:51:07.725+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
