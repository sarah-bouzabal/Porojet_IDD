[2023-11-24T18:21:54.734+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Projet_IDD.create_table manual__2023-11-24T18:21:53.741864+00:00 [queued]>
[2023-11-24T18:21:54.742+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Projet_IDD.create_table manual__2023-11-24T18:21:53.741864+00:00 [queued]>
[2023-11-24T18:21:54.743+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 2
[2023-11-24T18:21:54.755+0000] {taskinstance.py:1382} INFO - Executing <Task(PostgresOperator): create_table> on 2023-11-24 18:21:53.741864+00:00
[2023-11-24T18:21:54.760+0000] {standard_task_runner.py:57} INFO - Started process 144 to run task
[2023-11-24T18:21:54.763+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'Projet_IDD', 'create_table', 'manual__2023-11-24T18:21:53.741864+00:00', '--job-id', '13', '--raw', '--subdir', 'DAGS_FOLDER/ETL.py', '--cfg-path', '/tmp/tmpgvvqga83']
[2023-11-24T18:21:54.767+0000] {standard_task_runner.py:85} INFO - Job 13: Subtask create_table
[2023-11-24T18:21:54.809+0000] {task_command.py:416} INFO - Running <TaskInstance: Projet_IDD.create_table manual__2023-11-24T18:21:53.741864+00:00 [running]> on host d2fa4fd9c0bc
[2023-11-24T18:21:55.007+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='***@example.com' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='Projet_IDD' AIRFLOW_CTX_TASK_ID='create_table' AIRFLOW_CTX_EXECUTION_DATE='2023-11-24T18:21:53.741864+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2023-11-24T18:21:53.741864+00:00'
[2023-11-24T18:21:55.008+0000] {sql.py:274} INFO - Executing: 


CREATE TABLE IF NOT EXISTS hospitalisation(
    date_passage DATE,
    num_dep VARCHAR(10),
    
    PRIMARY KEY (num_dep, date_passage)
);

CREATE TABLE IF NOT EXISTS passage_urgence(
    num_dep VARCHAR(10),
    Code_tranches_dage VARCHAR(50),
    date_de_passage DATE,
    PRIMARY KEY (num_dep, code_tranches_dage,date_de_passage)
);

CREATE TABLE IF NOT EXISTS departements (
    num_dep VARCHAR(10),
    dep_name VARCHAR(50),
    region_name VARCHAR(50),
    PRIMARY KEY (num_dep)
);

CREATE TABLE IF NOT EXISTS urgences_hosp (
    dep VARCHAR(10),
    date_de_passage DATE,
    sursaud_cl_age_corona VARCHAR(50),
    nbre_pass_corona INT,
    nbre_pass_tot INT,
    nbre_hospit_corona INT,
    nbre_pass_corona_h INT,
    nbre_pass_corona_f INT,
    nbre_pass_tot_h INT,
    nbre_pass_tot_f INT,
    nbre_hospit_corona_h INT,
    nbre_hospit_corona_f INT,
    FOREIGN KEY (dep) REFERENCES departements(num_dep),
    FOREIGN KEY (dep, date_de_passage) REFERENCES hospitalisation(num_dep, date_passage),
    FOREIGN KEY (dep, sursaud_cl_age_corona,date_de_passage) REFERENCES passage_urgence(num_dep, Code_tranches_dage,date_de_passage)
);
[2023-11-24T18:21:55.016+0000] {base.py:73} INFO - Using connection ID 'postgres_connexion' for task execution.
[2023-11-24T18:21:55.023+0000] {base.py:73} INFO - Using connection ID 'postgres_connexion' for task execution.
[2023-11-24T18:21:55.036+0000] {sql.py:418} INFO - Running statement: 


CREATE TABLE IF NOT EXISTS hospitalisation(
    date_passage DATE,
    num_dep VARCHAR(10),
    
    PRIMARY KEY (num_dep, date_passage)
);

CREATE TABLE IF NOT EXISTS passage_urgence(
    num_dep VARCHAR(10),
    Code_tranches_dage VARCHAR(50),
    date_de_passage DATE,
    PRIMARY KEY (num_dep, code_tranches_dage,date_de_passage)
);

CREATE TABLE IF NOT EXISTS departements (
    num_dep VARCHAR(10),
    dep_name VARCHAR(50),
    region_name VARCHAR(50),
    PRIMARY KEY (num_dep)
);

CREATE TABLE IF NOT EXISTS urgences_hosp (
    dep VARCHAR(10),
    date_de_passage DATE,
    sursaud_cl_age_corona VARCHAR(50),
    nbre_pass_corona INT,
    nbre_pass_tot INT,
    nbre_hospit_corona INT,
    nbre_pass_corona_h INT,
    nbre_pass_corona_f INT,
    nbre_pass_tot_h INT,
    nbre_pass_tot_f INT,
    nbre_hospit_corona_h INT,
    nbre_hospit_corona_f INT,
    FOREIGN KEY (dep) REFERENCES departements(num_dep),
    FOREIGN KEY (dep, date_de_passage) REFERENCES hospitalisation(num_dep, date_passage),
    FOREIGN KEY (dep, sursaud_cl_age_corona,date_de_passage) REFERENCES passage_urgence(num_dep, Code_tranches_dage,date_de_passage)
);, parameters: None
[2023-11-24T18:21:55.049+0000] {taskinstance.py:1400} INFO - Marking task as SUCCESS. dag_id=Projet_IDD, task_id=create_table, execution_date=20231124T182153, start_date=20231124T182154, end_date=20231124T182155
[2023-11-24T18:21:55.099+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 0
[2023-11-24T18:21:55.122+0000] {taskinstance.py:2778} INFO - 1 downstream tasks scheduled from follow-on schedule check
